"use client"

// import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Header from "@/components/header";
import FooterHandler from "@/components/FooterHandler";
// import Script from "next/script";
import { ClerkProvider } from "@clerk/nextjs";
import { usePathname } from "next/navigation";
import {  useEffect, useState } from "react";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Car Rent Website",
//   description: "Generated by Mrs Asif",
//   icons: {
//     icon: "/favicon.ico",
//   },
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const pathname = usePathname();
  const [isLoading, setIsLoading] = useState(true);
   
  useEffect(() => {
    setIsLoading(true);
    const timer = setTimeout(() => {
      setIsLoading(false);
    }, 2000);
    return () => clearTimeout(timer);
  }, [pathname]); //triggered when pathname changes


  const isStudio = pathname.startsWith("/studio");
  const isHome = pathname.startsWith("/sign-in");
  const isAdmin = pathname.startsWith("/admin");
  const isOrders = pathname.startsWith("/orders");
  const isCustomers = pathname.startsWith("/customers");
  const isStatistics = pathname.startsWith("/product-data");
  const isReviews = pathname.startsWith("/reviews");
  const studioAndHome = !isStudio && !isHome && !isAdmin && !isOrders && !isCustomers && !isStatistics && !isReviews


  return (
    <ClerkProvider>
    <html lang="en">
      {/* <head>
      <link
          rel="stylesheet"
          href="https://cdn.snipcart.com/themes/v3.2.0/default/snipcart.css"/>
     </head> */}
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* <Script
          src="https://cdn.snipcart.com/themes/v3.2.0/default/snipcart.js"
          strategy="afterInteractive"/> */}
          
          <div hidden id="snipcart" data-api-key={process.env.
            NEXT_PUBLIC_SNIPCART_API_KEY} data-config-modal-style="none"></div>

          {/* <Header/> */}
          {(studioAndHome && !isLoading) && <Header/>}
                {children}
          <FooterHandler/>
           
      </body>
    </html>
    </ClerkProvider>
  );
}
